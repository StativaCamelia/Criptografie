import string
import random


def KSA(key):
    keylength = len(key)
    S = list(range(256))
    j = 0
    for i in range(256):
        j = (j + S[i] + key[i % keylength]) % 256
        S[i], S[j] = S[j], S[i]
    return S


def PRGA(S):
    i = 0
    j = 0
    while True:
        i = (i + 1) % 256
        j = (j + S[i]) % 256
        S[i], S[j] = S[j], S[i]
        K = S[(S[i] + S[j]) % 256]
        yield K


def RC4(key):
    S = KSA(key)
    return PRGA(S)


def convert_key(s):
    return [ord(c) for c in s]


def randomString(stringLength=10):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))

if __name__ == '__main__':
    key = 'Key'
    plaintext = 'Plaintext'
    key_element = 0;

    key = convert_key(key)
    keystream = RC4(key)

    cypertext = ""
    #CRIPTARE
    for c in plaintext:
        key_element = keystream.__next__()
        cypertext += "%02X" % (ord(c) ^ key_element)
    print(cypertext)

    key = 'Key'
    key = convert_key(key)
    keystream = RC4(key)
    #DECRIPTARE
    for c in cypertext:
        key_element = keystream.__next__()
        plaintext += "%02X" % (ord(c) ^ key_element)
    print(plaintext)

    numer_of_0 = 0;
    i = 1
    for i in range(2**16):
        i = 1
        key = randomString();
        key = convert_key(key)
        keystream = RC4(key)
        for c in plaintext:
            key_element = keystream.__next__()
            if i == 2:
                if key_element%2 == 0:
                    numer_of_0 += 1
            cypertext += "%02X" % (ord(c)^key_element)
            i += 1
    print(numer_of_0)




